Class Workshop.Installer Extends %RegisteredObject
{

XData Install [ XMLNamespace = INSTALLER ]
{
<Manifest> 
    <Log Text="Creating namespaces for Workshop..." Level="0"/> 
    <Namespace Name="WORKSHOP" Create="yes" Ensemble=""> 
        <Configuration> 
            <Database Name="WORKSHOP-DATA" Dir="/usr/irissys/mgr/workshop-data" Create="yes" MountRequired="true" Resource="%DB_DEFAULT" PublicPermissions="RW" MountAtStartup="true"/> 
            <Database Name="WORKSHOP-APP" Dir="/usr/irissys/mgr/workshop-code" Create="yes" MountRequired="true" Resource="%DB_DEFAULT" PublicPermissions="RW" MountAtStartup="true"/> 
        </Configuration>
    </Namespace>
</Manifest>
}

/// This is a method generator whose code is generated by XGL. 
/// Main setup method
ClassMethod RunManifest(ByRef pVars, pLogLevel As %Integer = 0, pInstaller As %Installer.Installer) As %Status [ CodeMode = objectgenerator, Internal ]
{
    Quit ##class(%Installer.Manifest).%Generate(%compiledclass, %code, "Install")
}

/// Entry point    
ClassMethod Run(ByRef vars) As %Status
{
    try { 
        write "START INSTALLER",! 
        
        set sc = ..RunManifest(.vars) 
        if $$$ISOK(sc) {
            write !,"INSTALLER SUCCESS"
        }
        $$$ThrowOnError(sc)

    } catch ex { 
        set sc = ex.AsStatus() 
        write $System.Status.GetErrorText(sc),! 
        do $SYSTEM.Process.Terminate($JOB,1) 
    } 
    quit sc
}

}
